/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC1155, ERC1155Interface } from "../ERC1155";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenUri",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "_value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_approvals",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620012d2380380620012d2833981016040819052620000349162000105565b6200003f8162000046565b506200022e565b80516200005b9060029060208401906200005f565b5050565b8280546200006d90620001db565b90600052602060002090601f016020900481019282620000915760008555620000dc565b82601f10620000ac57805160ff1916838001178555620000dc565b82800160010185558215620000dc579182015b82811115620000dc578251825591602001919060010190620000bf565b50620000ea929150620000ee565b5090565b5b80821115620000ea5760008155600101620000ef565b6000602080838503121562000118578182fd5b82516001600160401b03808211156200012f578384fd5b818501915085601f83011262000143578384fd5b81518181111562000158576200015862000218565b604051601f8201601f19908116603f0116810190838211818310171562000183576200018362000218565b8160405282815288868487010111156200019b578687fd5b8693505b82841015620001be57848401860151818501870152928501926200019f565b82841115620001cf57868684830101525b98975050505050505050565b600181811c90821680620001f057607f821691505b602082108114156200021257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b611094806200023e6000396000f3fe608060405234801561001057600080fd5b506004361061009d5760003560e01c80634e1273f4116100665780634e1273f41461014e5780636be8d6b51461016e578063a22cb46514610196578063e985e9c5146101a9578063f242432a146101e557600080fd5b8062fdd58e146100a257806301ffc9a7146100c85780630e89341c146100eb5780632eb2c2d61461010b578063319d53e714610120575b600080fd5b6100b56100b0366004610cd1565b6101f8565b6040519081526020015b60405180910390f35b6100db6100d6366004610d63565b61027b565b60405190151581526020016100bf565b6100fe6100f9366004610d9b565b6102cd565b6040516100bf9190610f31565b61011e610119366004610b6a565b610361565b005b6100db61012e366004610b38565b600160209081526000928352604080842090915290825290205460ff1681565b61016161015c366004610cfa565b61065a565b6040516100bf9190610eed565b6100b561017c366004610cd1565b600060208181529281526040808220909352908152205481565b61011e6101a4366004610c97565b6107ea565b6100db6101b7366004610b38565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b61011e6101f3366004610c21565b610856565b60006001600160a01b0383166102555760405162461bcd60e51b815260206004820152601860248201527f455243313135353a20496e76616c69642061646472657373000000000000000060448201526064015b60405180910390fd5b506001600160a01b03909116600090815260208181526040808320938352929052205490565b60006301ffc9a760e01b6001600160e01b0319831614806102ac5750636cdb3d1360e11b6001600160e01b03198316145b806102c757506303a24d0760e21b6001600160e01b03198316145b92915050565b6060600280546102dc90610ff4565b80601f016020809104026020016040519081016040528092919081815260200182805461030890610ff4565b80156103555780601f1061032a57610100808354040283529160200191610355565b820191906000526020600020905b81548152906001019060200180831161033857829003601f168201915b50505050509050919050565b8483146103c25760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2049647320616e6420616d6f756e7473206c656e677468206044820152680dad2e6e8dac2e8c6d60bb1b606482015260840161024c565b6001600160a01b0388163314806103fc57506001600160a01b038816600090815260016020908152604080832033845290915290205460ff165b6104185760405162461bcd60e51b815260040161024c90610f84565b60008060005b878110156104ef5788888281811061044657634e487b7160e01b600052603260045260246000fd5b90506020020135925086868281811061046f57634e487b7160e01b600052603260045260246000fd5b6001600160a01b038e16600090815260208181526040808320898452825282208054939091029490940135955086939250906104ac908490610fdd565b90915550506001600160a01b038a16600090815260208181526040808320868452909152812080548492906104e2908490610fc5565b909155505060010161041e565b50886001600160a01b03168a6001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8b8b8b8b6040516105439493929190610ebb565b60405180910390a46001600160a01b0389163b1561056c576001600160a01b0389161515610606565b60405163bc197c8160e01b808252906001600160a01b038b169063bc197c81906105a89033908f908e908e908e908e908e908e90600401610e10565b602060405180830381600087803b1580156105c257600080fd5b505af11580156105d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fa9190610d7f565b6001600160e01b031916145b61064e5760405162461bcd60e51b8152602060048201526019602482015278115490cc4c4d4d4e88155b9cd85999481c9958da5c1a595b9d603a1b604482015260640161024c565b50505050505050505050565b60608382146106c05760405162461bcd60e51b815260206004820152602c60248201527f455243313135353a204f776e65727320616e6420616d6f756e7473206c656e6760448201526b0e8d040dad2e6e8dac2e8c6d60a31b606482015260840161024c565b8367ffffffffffffffff8111156106e757634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610710578160200160208202803683370190505b50905060005b848110156107e15760008087878481811061074157634e487b7160e01b600052603260045260246000fd5b90506020020160208101906107569190610b17565b6001600160a01b03166001600160a01b03168152602001908152602001600020600085858481811061079857634e487b7160e01b600052603260045260246000fd5b905060200201358152602001908152602001600020548282815181106107ce57634e487b7160e01b600052603260045260246000fd5b6020908102919091010152600101610716565b50949350505050565b3360008181526001602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6001600160a01b03861633148061089057506001600160a01b038616600090815260016020908152604080832033845290915290205460ff165b6108ac5760405162461bcd60e51b815260040161024c90610f84565b6001600160a01b038616600090815260208181526040808320878452909152812080548592906108dd908490610fdd565b90915550506001600160a01b03851660009081526020818152604080832087845290915281208054859290610913908490610fc5565b909155505060408051858152602081018590526001600160a01b03808816929089169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0385163b15610984576001600160a01b0385161515610a21565b60405163f23a6e6160e01b815263bc197c8160e01b906001600160a01b0387169063f23a6e61906109c39033908b908a908a908a908a90600401610e74565b602060405180830381600087803b1580156109dd57600080fd5b505af11580156109f1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a159190610d7f565b6001600160e01b031916145b610a695760405162461bcd60e51b8152602060048201526019602482015278115490cc4c4d4d4e88155b9cd85999481c9958da5c1a595b9d603a1b604482015260640161024c565b505050505050565b80356001600160a01b0381168114610a8857600080fd5b919050565b60008083601f840112610a9e578182fd5b50813567ffffffffffffffff811115610ab5578182fd5b6020830191508360208260051b8501011115610ad057600080fd5b9250929050565b60008083601f840112610ae8578182fd5b50813567ffffffffffffffff811115610aff578182fd5b602083019150836020828501011115610ad057600080fd5b600060208284031215610b28578081fd5b610b3182610a71565b9392505050565b60008060408385031215610b4a578081fd5b610b5383610a71565b9150610b6160208401610a71565b90509250929050565b60008060008060008060008060a0898b031215610b85578384fd5b610b8e89610a71565b9750610b9c60208a01610a71565b9650604089013567ffffffffffffffff80821115610bb8578586fd5b610bc48c838d01610a8d565b909850965060608b0135915080821115610bdc578586fd5b610be88c838d01610a8d565b909650945060808b0135915080821115610c00578384fd5b50610c0d8b828c01610ad7565b999c989b5096995094979396929594505050565b60008060008060008060a08789031215610c39578182fd5b610c4287610a71565b9550610c5060208801610a71565b94506040870135935060608701359250608087013567ffffffffffffffff811115610c79578283fd5b610c8589828a01610ad7565b979a9699509497509295939492505050565b60008060408385031215610ca9578182fd5b610cb283610a71565b915060208301358015158114610cc6578182fd5b809150509250929050565b60008060408385031215610ce3578182fd5b610cec83610a71565b946020939093013593505050565b60008060008060408587031215610d0f578384fd5b843567ffffffffffffffff80821115610d26578586fd5b610d3288838901610a8d565b90965094506020870135915080821115610d4a578384fd5b50610d5787828801610a8d565b95989497509550505050565b600060208284031215610d74578081fd5b8135610b3181611045565b600060208284031215610d90578081fd5b8151610b3181611045565b600060208284031215610dac578081fd5b5035919050565b81835260006001600160fb1b03831115610dcb578081fd5b8260051b80836020870137939093016020019283525090919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b0389811682528816602082015260a060408201819052600090610e3d908301888a610db3565b8281036060840152610e50818789610db3565b90508281036080840152610e65818587610de7565b9b9a5050505050505050505050565b6001600160a01b03878116825286166020820152604081018590526060810184905260a060808201819052600090610eaf9083018486610de7565b98975050505050505050565b604081526000610ecf604083018688610db3565b8281036020840152610ee2818587610db3565b979650505050505050565b6020808252825182820181905260009190848201906040850190845b81811015610f2557835183529284019291840191600101610f09565b50909695505050505050565b6000602080835283518082850152825b81811015610f5d57858101830151858201604001528201610f41565b81811115610f6e5783604083870101525b50601f01601f1916929092016040019392505050565b60208082526021908201527f455243313135353a2043616c6c6572206973206e6f7420617574686f72697a656040820152601960fa1b606082015260800190565b60008219821115610fd857610fd861102f565b500190565b600082821015610fef57610fef61102f565b500390565b600181811c9082168061100857607f821691505b6020821081141561102957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6001600160e01b03198116811461105b57600080fd5b5056fea2646970667358221220c18e67e6bdac32c60c61f80a7a4ee69dd091a1bd48f921872400f0f5979b57f664736f6c63430008040033";

type ERC1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155__factory extends ContractFactory {
  constructor(...args: ERC1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ERC1155";
  }

  deploy(
    tokenUri: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1155> {
    return super.deploy(tokenUri, overrides || {}) as Promise<ERC1155>;
  }
  getDeployTransaction(
    tokenUri: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(tokenUri, overrides || {});
  }
  attach(address: string): ERC1155 {
    return super.attach(address) as ERC1155;
  }
  connect(signer: Signer): ERC1155__factory {
    return super.connect(signer) as ERC1155__factory;
  }
  static readonly contractName: "ERC1155";
  public readonly contractName: "ERC1155";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155Interface {
    return new utils.Interface(_abi) as ERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155 {
    return new Contract(address, _abi, signerOrProvider) as ERC1155;
  }
}
