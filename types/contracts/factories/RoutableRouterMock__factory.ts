/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  RoutableRouterMock,
  RoutableRouterMockInterface,
} from '../RoutableRouterMock';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract RoutableMock',
        name: 'routableContract',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'openFunction',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'routedFunction',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5060405161025c38038061025c83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b6101cb806100916000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806346be982e1461003b578063b46c0b1014610057575b600080fd5b61004361005f565b604051901515815260200160405180910390f35b610043610105565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166346be982e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156100c857600080fd5b505afa1580156100dc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610100919061016e565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b46c0b106040518163ffffffff1660e01b815260040160206040518083038186803b1580156100c857600080fd5b60006020828403121561017f578081fd5b8151801515811461018e578182fd5b939250505056fea26469706673582212203e86850d8df961e6cfc735ae99a1945974c989a6045dd2a73b153cd6e79be69364736f6c63430008040033';

type RoutableRouterMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RoutableRouterMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RoutableRouterMock__factory extends ContractFactory {
  constructor(...args: RoutableRouterMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'RoutableRouterMock';
  }

  deploy(
    routableContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RoutableRouterMock> {
    return super.deploy(
      routableContract,
      overrides || {}
    ) as Promise<RoutableRouterMock>;
  }
  getDeployTransaction(
    routableContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(routableContract, overrides || {});
  }
  attach(address: string): RoutableRouterMock {
    return super.attach(address) as RoutableRouterMock;
  }
  connect(signer: Signer): RoutableRouterMock__factory {
    return super.connect(signer) as RoutableRouterMock__factory;
  }
  static readonly contractName: 'RoutableRouterMock';
  public readonly contractName: 'RoutableRouterMock';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RoutableRouterMockInterface {
    return new utils.Interface(_abi) as RoutableRouterMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RoutableRouterMock {
    return new Contract(address, _abi, signerOrProvider) as RoutableRouterMock;
  }
}
