/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  ERC1155ReceiverMock,
  ERC1155ReceiverMockInterface,
} from '../ERC1155ReceiverMock';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_operator',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_from',
        type: 'address',
      },
      {
        internalType: 'uint256[]',
        name: '_ids',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[]',
        name: '_values',
        type: 'uint256[]',
      },
      {
        internalType: 'bytes',
        name: '_data',
        type: 'bytes',
      },
    ],
    name: 'onERC1155BatchReceived',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_operator',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_from',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_id',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_value',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '_data',
        type: 'bytes',
      },
    ],
    name: 'onERC1155Received',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b506102fa806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063bc197c811461003b578063f23a6e61146100ab575b600080fd5b610076610049366004610197565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b6040517fffffffff00000000000000000000000000000000000000000000000000000000909116815260200160405180910390f35b6100766100b936600461024e565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461010857600080fd5b919050565b60008083601f84011261011e578182fd5b50813567ffffffffffffffff811115610135578182fd5b6020830191508360208260051b850101111561015057600080fd5b9250929050565b60008083601f840112610168578182fd5b50813567ffffffffffffffff81111561017f578182fd5b60208301915083602082850101111561015057600080fd5b60008060008060008060008060a0898b0312156101b2578384fd5b6101bb896100e4565b97506101c960208a016100e4565b9650604089013567ffffffffffffffff808211156101e5578586fd5b6101f18c838d0161010d565b909850965060608b0135915080821115610209578586fd5b6102158c838d0161010d565b909650945060808b013591508082111561022d578384fd5b5061023a8b828c01610157565b999c989b5096995094979396929594505050565b60008060008060008060a08789031215610266578182fd5b61026f876100e4565b955061027d602088016100e4565b94506040870135935060608701359250608087013567ffffffffffffffff8111156102a6578283fd5b6102b289828a01610157565b979a969950949750929593949250505056fea2646970667358221220b7ddb871feba360638b490906cec1134261ce968898b2981eca149b71803f34b64736f6c63430008040033';

type ERC1155ReceiverMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155ReceiverMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155ReceiverMock__factory extends ContractFactory {
  constructor(...args: ERC1155ReceiverMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'ERC1155ReceiverMock';
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1155ReceiverMock> {
    return super.deploy(overrides || {}) as Promise<ERC1155ReceiverMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC1155ReceiverMock {
    return super.attach(address) as ERC1155ReceiverMock;
  }
  connect(signer: Signer): ERC1155ReceiverMock__factory {
    return super.connect(signer) as ERC1155ReceiverMock__factory;
  }
  static readonly contractName: 'ERC1155ReceiverMock';
  public readonly contractName: 'ERC1155ReceiverMock';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155ReceiverMockInterface {
    return new utils.Interface(_abi) as ERC1155ReceiverMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155ReceiverMock {
    return new Contract(address, _abi, signerOrProvider) as ERC1155ReceiverMock;
  }
}
