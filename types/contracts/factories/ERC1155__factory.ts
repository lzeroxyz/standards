/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { ERC1155, ERC1155Interface } from '../ERC1155';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: '_operator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bool',
        name: '_approved',
        type: 'bool',
      },
    ],
    name: 'ApprovalForAll',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_operator',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: '_from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: '_to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256[]',
        name: '_ids',
        type: 'uint256[]',
      },
      {
        indexed: false,
        internalType: 'uint256[]',
        name: '_values',
        type: 'uint256[]',
      },
    ],
    name: 'TransferBatch',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_operator',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: '_from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: '_to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_id',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_value',
        type: 'uint256',
      },
    ],
    name: 'TransferSingle',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'string',
        name: '_value',
        type: 'string',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: '_id',
        type: 'uint256',
      },
    ],
    name: 'URI',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: '_approvals',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: '_balances',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: 'balance',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'owners',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: 'ids',
        type: 'uint256[]',
      },
    ],
    name: 'balanceOfBatch',
    outputs: [
      {
        internalType: 'uint256[]',
        name: 'balances',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'isApprovedForAll',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256[]',
        name: 'ids',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[]',
        name: 'amounts',
        type: 'uint256[]',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'safeBatchTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'setApprovalForAll',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5061102c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a25760003560e01c80634e1273f411610076578063a22cb4651161005b578063a22cb4651461017b578063e985e9c51461018e578063f242432a146101ca57600080fd5b80634e1273f4146101335780636be8d6b51461015357600080fd5b8062fdd58e146100a757806301ffc9a7146100cd5780632eb2c2d6146100f0578063319d53e714610105575b600080fd5b6100ba6100b5366004610d39565b6101dd565b6040519081526020015b60405180910390f35b6100e06100db366004610dcb565b610260565b60405190151581526020016100c4565b6101036100fe366004610bd2565b6102fd565b005b6100e0610113366004610ba0565b600160209081526000928352604080842090915290825290205460ff1681565b610146610141366004610d62565b610661565b6040516100c49190610f54565b6100ba610161366004610d39565b600060208181529281526040808220909352908152205481565b610103610189366004610cff565b610802565b6100e061019c366004610ba0565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101036101d8366004610c89565b61086e565b60006001600160a01b03831661023a5760405162461bcd60e51b815260206004820152601860248201527f455243313135353a20496e76616c69642061646472657373000000000000000060448201526064015b60405180910390fd5b506001600160a01b03909116600090815260208181526040808320938352929052205490565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b0319831614806102c357507fd9b67a26000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b806102f757507f0e89341c000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b8483146103725760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2049647320616e6420616d6f756e7473206c656e6774682060448201527f6d6973746d6174636800000000000000000000000000000000000000000000006064820152608401610231565b6001600160a01b0388163314806103ac57506001600160a01b038816600090815260016020908152604080832033845290915290205460ff165b6104025760405162461bcd60e51b815260206004820152602160248201527f455243313135353a2043616c6c6572206973206e6f7420617574686f72697a656044820152601960fa1b6064820152608401610231565b60008060005b878110156104d95788888281811061043057634e487b7160e01b600052603260045260246000fd5b90506020020135925086868281811061045957634e487b7160e01b600052603260045260246000fd5b6001600160a01b038e1660009081526020818152604080832089845282528220805493909102949094013595508593925090610496908490610fb0565b90915550506001600160a01b038a16600090815260208181526040808320868452909152812080548492906104cc908490610f98565b9091555050600101610408565b50886001600160a01b03168a6001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8b8b8b8b60405161052d9493929190610f22565b60405180910390a46001600160a01b0389163b156105fc576040517fbc197c8100000000000000000000000000000000000000000000000000000000808252906001600160a01b038b169063bc197c819061059a9033908f908e908e908e908e908e908e90600401610e79565b602060405180830381600087803b1580156105b457600080fd5b505af11580156105c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ec9190610de7565b6001600160e01b03191614610609565b6001600160a01b03891615155b6106555760405162461bcd60e51b815260206004820152601960248201527f455243313135353a20556e7361666520726563697069656e74000000000000006044820152606401610231565b50505050505050505050565b60608382146106d85760405162461bcd60e51b815260206004820152602c60248201527f455243313135353a204f776e65727320616e6420616d6f756e7473206c656e6760448201527f7468206d6973746d6174636800000000000000000000000000000000000000006064820152608401610231565b8367ffffffffffffffff8111156106ff57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610728578160200160208202803683370190505b50905060005b848110156107f95760008087878481811061075957634e487b7160e01b600052603260045260246000fd5b905060200201602081019061076e9190610b7f565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008585848181106107b057634e487b7160e01b600052603260045260246000fd5b905060200201358152602001908152602001600020548282815181106107e657634e487b7160e01b600052603260045260246000fd5b602090810291909101015260010161072e565b50949350505050565b3360008181526001602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6001600160a01b0386163314806108a857506001600160a01b038616600090815260016020908152604080832033845290915290205460ff165b6108fe5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a2043616c6c6572206973206e6f7420617574686f72697a656044820152601960fa1b6064820152608401610231565b6001600160a01b0386166000908152602081815260408083208784529091528120805485929061092f908490610fb0565b90915550506001600160a01b03851660009081526020818152604080832087845290915281208054859290610965908490610f98565b909155505060408051858152602081018590526001600160a01b03808816929089169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0385163b15610a78576040517ff23a6e6100000000000000000000000000000000000000000000000000000000808252906001600160a01b0387169063f23a6e6190610a169033908b908a908a908a908a90600401610edd565b602060405180830381600087803b158015610a3057600080fd5b505af1158015610a44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a689190610de7565b6001600160e01b03191614610a85565b6001600160a01b03851615155b610ad15760405162461bcd60e51b815260206004820152601960248201527f455243313135353a20556e7361666520726563697069656e74000000000000006044820152606401610231565b505050505050565b80356001600160a01b0381168114610af057600080fd5b919050565b60008083601f840112610b06578182fd5b50813567ffffffffffffffff811115610b1d578182fd5b6020830191508360208260051b8501011115610b3857600080fd5b9250929050565b60008083601f840112610b50578182fd5b50813567ffffffffffffffff811115610b67578182fd5b602083019150836020828501011115610b3857600080fd5b600060208284031215610b90578081fd5b610b9982610ad9565b9392505050565b60008060408385031215610bb2578081fd5b610bbb83610ad9565b9150610bc960208401610ad9565b90509250929050565b60008060008060008060008060a0898b031215610bed578384fd5b610bf689610ad9565b9750610c0460208a01610ad9565b9650604089013567ffffffffffffffff80821115610c20578586fd5b610c2c8c838d01610af5565b909850965060608b0135915080821115610c44578586fd5b610c508c838d01610af5565b909650945060808b0135915080821115610c68578384fd5b50610c758b828c01610b3f565b999c989b5096995094979396929594505050565b60008060008060008060a08789031215610ca1578182fd5b610caa87610ad9565b9550610cb860208801610ad9565b94506040870135935060608701359250608087013567ffffffffffffffff811115610ce1578283fd5b610ced89828a01610b3f565b979a9699509497509295939492505050565b60008060408385031215610d11578182fd5b610d1a83610ad9565b915060208301358015158114610d2e578182fd5b809150509250929050565b60008060408385031215610d4b578182fd5b610d5483610ad9565b946020939093013593505050565b60008060008060408587031215610d77578384fd5b843567ffffffffffffffff80821115610d8e578586fd5b610d9a88838901610af5565b90965094506020870135915080821115610db2578384fd5b50610dbf87828801610af5565b95989497509550505050565b600060208284031215610ddc578081fd5b8135610b9981610fdd565b600060208284031215610df8578081fd5b8151610b9981610fdd565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115610e34578081fd5b8260051b80836020870137939093016020019283525090919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006001600160a01b03808b168352808a1660208401525060a06040830152610ea660a08301888a610e03565b8281036060840152610eb9818789610e03565b90508281036080840152610ece818587610e50565b9b9a5050505050505050505050565b60006001600160a01b03808916835280881660208401525085604083015284606083015260a06080830152610f1660a083018486610e50565b98975050505050505050565b604081526000610f36604083018688610e03565b8281036020840152610f49818587610e03565b979650505050505050565b6020808252825182820181905260009190848201906040850190845b81811015610f8c57835183529284019291840191600101610f70565b50909695505050505050565b60008219821115610fab57610fab610fc7565b500190565b600082821015610fc257610fc2610fc7565b500390565b634e487b7160e01b600052601160045260246000fd5b6001600160e01b031981168114610ff357600080fd5b5056fea26469706673582212203ee116e95be7a3290129028c2798915d67a876358f699b7d382d78414930d47664736f6c63430008040033';

type ERC1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155__factory extends ContractFactory {
  constructor(...args: ERC1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'ERC1155';
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1155> {
    return super.deploy(overrides || {}) as Promise<ERC1155>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC1155 {
    return super.attach(address) as ERC1155;
  }
  connect(signer: Signer): ERC1155__factory {
    return super.connect(signer) as ERC1155__factory;
  }
  static readonly contractName: 'ERC1155';
  public readonly contractName: 'ERC1155';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155Interface {
    return new utils.Interface(_abi) as ERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155 {
    return new Contract(address, _abi, signerOrProvider) as ERC1155;
  }
}
