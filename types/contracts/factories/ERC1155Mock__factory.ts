/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { ERC1155Mock, ERC1155MockInterface } from '../ERC1155Mock';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: '_operator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bool',
        name: '_approved',
        type: 'bool',
      },
    ],
    name: 'ApprovalForAll',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_operator',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: '_from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: '_to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256[]',
        name: '_ids',
        type: 'uint256[]',
      },
      {
        indexed: false,
        internalType: 'uint256[]',
        name: '_values',
        type: 'uint256[]',
      },
    ],
    name: 'TransferBatch',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_operator',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: '_from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: '_to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_id',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_value',
        type: 'uint256',
      },
    ],
    name: 'TransferSingle',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'string',
        name: '_value',
        type: 'string',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: '_id',
        type: 'uint256',
      },
    ],
    name: 'URI',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: '_approvals',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: '_balances',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: 'balance',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'owners',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: 'ids',
        type: 'uint256[]',
      },
    ],
    name: 'balanceOfBatch',
    outputs: [
      {
        internalType: 'uint256[]',
        name: 'balances',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'burn',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'isApprovedForAll',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'mint',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256[]',
        name: 'ids',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[]',
        name: 'amounts',
        type: 'uint256[]',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'safeBatchTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'setApprovalForAll',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b506112b9806100206000396000f3fe608060405234801561001057600080fd5b50600436106100c85760003560e01c806344df8e7011610081578063a22cb4651161005b578063a22cb465146101b4578063e985e9c5146101c7578063f242432a1461020357600080fd5b806344df8e70146101295780634e1273f41461016c5780636be8d6b51461018c57600080fd5b80631b2ef1ca116100b25780631b2ef1ca146101165780632eb2c2d61461012b578063319d53e71461013e57600080fd5b8062fdd58e146100cd57806301ffc9a7146100f3575b600080fd5b6100e06100db366004610f27565b610216565b6040519081526020015b60405180910390f35b610106610101366004610fb9565b610299565b60405190151581526020016100ea565b610129610124366004610ff1565b610336565b005b610129610139366004610dc0565b61037d565b61010661014c366004610d8e565b600160209081526000928352604080842090915290825290205460ff1681565b61017f61017a366004610f50565b6106e1565b6040516100ea91906111e1565b6100e061019a366004610f27565b600060208181529281526040808220909352908152205481565b6101296101c2366004610eed565b610882565b6101066101d5366004610d8e565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b610129610211366004610e77565b6108ee565b60006001600160a01b0383166102735760405162461bcd60e51b815260206004820152601860248201527f455243313135353a20496e76616c69642061646472657373000000000000000060448201526064015b60405180910390fd5b506001600160a01b03909116600090815260208181526040808320938352929052205490565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b0319831614806102fc57507fd9b67a26000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b8061033057507f0e89341c000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b6103793383836000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610b4092505050565b5050565b8483146103f25760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2049647320616e6420616d6f756e7473206c656e6774682060448201527f6d6973746d617463680000000000000000000000000000000000000000000000606482015260840161026a565b6001600160a01b03881633148061042c57506001600160a01b038816600090815260016020908152604080832033845290915290205460ff165b6104825760405162461bcd60e51b815260206004820152602160248201527f455243313135353a2043616c6c6572206973206e6f7420617574686f72697a656044820152601960fa1b606482015260840161026a565b60008060005b87811015610559578888828181106104b057634e487b7160e01b600052603260045260246000fd5b9050602002013592508686828181106104d957634e487b7160e01b600052603260045260246000fd5b6001600160a01b038e166000908152602081815260408083208984528252822080549390910294909401359550859392509061051690849061123d565b90915550506001600160a01b038a166000908152602081815260408083208684529091528120805484929061054c908490611225565b9091555050600101610488565b50886001600160a01b03168a6001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8b8b8b8b6040516105ad94939291906111af565b60405180910390a46001600160a01b0389163b1561067c576040517fbc197c8100000000000000000000000000000000000000000000000000000000808252906001600160a01b038b169063bc197c819061061a9033908f908e908e908e908e908e908e90600401611088565b602060405180830381600087803b15801561063457600080fd5b505af1158015610648573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066c9190610fd5565b6001600160e01b03191614610689565b6001600160a01b03891615155b6106d55760405162461bcd60e51b815260206004820152601960248201527f455243313135353a20556e7361666520726563697069656e7400000000000000604482015260640161026a565b50505050505050505050565b60608382146107585760405162461bcd60e51b815260206004820152602c60248201527f455243313135353a204f776e65727320616e6420616d6f756e7473206c656e6760448201527f7468206d6973746d617463680000000000000000000000000000000000000000606482015260840161026a565b8367ffffffffffffffff81111561077f57634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156107a8578160200160208202803683370190505b50905060005b84811015610879576000808787848181106107d957634e487b7160e01b600052603260045260246000fd5b90506020020160208101906107ee9190610d6d565b6001600160a01b03166001600160a01b03168152602001908152602001600020600085858481811061083057634e487b7160e01b600052603260045260246000fd5b9050602002013581526020019081526020016000205482828151811061086657634e487b7160e01b600052603260045260246000fd5b60209081029190910101526001016107ae565b50949350505050565b3360008181526001602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6001600160a01b03861633148061092857506001600160a01b038616600090815260016020908152604080832033845290915290205460ff165b61097e5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a2043616c6c6572206973206e6f7420617574686f72697a656044820152601960fa1b606482015260840161026a565b6001600160a01b038616600090815260208181526040808320878452909152812080548592906109af90849061123d565b90915550506001600160a01b038516600090815260208181526040808320878452909152812080548592906109e5908490611225565b909155505060408051858152602081018590526001600160a01b03808816929089169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0385163b15610adf5760405163f23a6e6160e01b808252906001600160a01b0387169063f23a6e6190610a7d9033908b908a908a908a908a906004016110ec565b602060405180830381600087803b158015610a9757600080fd5b505af1158015610aab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610acf9190610fd5565b6001600160e01b03191614610aec565b6001600160a01b03851615155b610b385760405162461bcd60e51b815260206004820152601960248201527f455243313135353a20556e7361666520726563697069656e7400000000000000604482015260640161026a565b505050505050565b6001600160a01b03841660009081526020818152604080832086845290915281208054849290610b71908490611225565b909155505060408051848152602081018490526001600160a01b0386169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0384163b15610c685760405163f23a6e6160e01b808252906001600160a01b0386169063f23a6e6190610c06903390600090899089908990600401611131565b602060405180830381600087803b158015610c2057600080fd5b505af1158015610c34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c589190610fd5565b6001600160e01b03191614610c75565b6001600160a01b03841615155b610cc15760405162461bcd60e51b815260206004820152601960248201527f455243313135353a20556e7361666520726563697069656e7400000000000000604482015260640161026a565b50505050565b80356001600160a01b0381168114610cde57600080fd5b919050565b60008083601f840112610cf4578182fd5b50813567ffffffffffffffff811115610d0b578182fd5b6020830191508360208260051b8501011115610d2657600080fd5b9250929050565b60008083601f840112610d3e578182fd5b50813567ffffffffffffffff811115610d55578182fd5b602083019150836020828501011115610d2657600080fd5b600060208284031215610d7e578081fd5b610d8782610cc7565b9392505050565b60008060408385031215610da0578081fd5b610da983610cc7565b9150610db760208401610cc7565b90509250929050565b60008060008060008060008060a0898b031215610ddb578384fd5b610de489610cc7565b9750610df260208a01610cc7565b9650604089013567ffffffffffffffff80821115610e0e578586fd5b610e1a8c838d01610ce3565b909850965060608b0135915080821115610e32578586fd5b610e3e8c838d01610ce3565b909650945060808b0135915080821115610e56578384fd5b50610e638b828c01610d2d565b999c989b5096995094979396929594505050565b60008060008060008060a08789031215610e8f578182fd5b610e9887610cc7565b9550610ea660208801610cc7565b94506040870135935060608701359250608087013567ffffffffffffffff811115610ecf578283fd5b610edb89828a01610d2d565b979a9699509497509295939492505050565b60008060408385031215610eff578182fd5b610f0883610cc7565b915060208301358015158114610f1c578182fd5b809150509250929050565b60008060408385031215610f39578182fd5b610f4283610cc7565b946020939093013593505050565b60008060008060408587031215610f65578384fd5b843567ffffffffffffffff80821115610f7c578586fd5b610f8888838901610ce3565b90965094506020870135915080821115610fa0578384fd5b50610fad87828801610ce3565b95989497509550505050565b600060208284031215610fca578081fd5b8135610d878161126a565b600060208284031215610fe6578081fd5b8151610d878161126a565b60008060408385031215611003578182fd5b50508035926020909101359150565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115611043578081fd5b8260051b80836020870137939093016020019283525090919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006001600160a01b03808b168352808a1660208401525060a060408301526110b560a08301888a611012565b82810360608401526110c8818789611012565b905082810360808401526110dd81858761105f565b9b9a5050505050505050505050565b60006001600160a01b03808916835280881660208401525085604083015284606083015260a0608083015261112560a08301848661105f565b98975050505050505050565b60006001600160a01b03808816835260208188168185015286604085015285606085015260a06080850152845191508160a0850152825b828110156111845785810182015185820160c001528101611168565b82811115611195578360c084870101525b5050601f01601f19169190910160c0019695505050505050565b6040815260006111c3604083018688611012565b82810360208401526111d6818587611012565b979650505050505050565b6020808252825182820181905260009190848201906040850190845b81811015611219578351835292840192918401916001016111fd565b50909695505050505050565b6000821982111561123857611238611254565b500190565b60008282101561124f5761124f611254565b500390565b634e487b7160e01b600052601160045260246000fd5b6001600160e01b03198116811461128057600080fd5b5056fea26469706673582212206b8364cc7c6f9828c39b2e6ecb70e200ee8284bcf20c2b1aa5d361225b5b46ee64736f6c63430008040033';

type ERC1155MockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155MockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Mock__factory extends ContractFactory {
  constructor(...args: ERC1155MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'ERC1155Mock';
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1155Mock> {
    return super.deploy(overrides || {}) as Promise<ERC1155Mock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC1155Mock {
    return super.attach(address) as ERC1155Mock;
  }
  connect(signer: Signer): ERC1155Mock__factory {
    return super.connect(signer) as ERC1155Mock__factory;
  }
  static readonly contractName: 'ERC1155Mock';
  public readonly contractName: 'ERC1155Mock';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155MockInterface {
    return new utils.Interface(_abi) as ERC1155MockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Mock {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Mock;
  }
}
