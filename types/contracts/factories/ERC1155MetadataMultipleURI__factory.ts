/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  ERC1155MetadataMultipleURI,
  ERC1155MetadataMultipleURIInterface,
} from '../ERC1155MetadataMultipleURI';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: '_operator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bool',
        name: '_approved',
        type: 'bool',
      },
    ],
    name: 'ApprovalForAll',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_operator',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: '_from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: '_to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256[]',
        name: '_ids',
        type: 'uint256[]',
      },
      {
        indexed: false,
        internalType: 'uint256[]',
        name: '_values',
        type: 'uint256[]',
      },
    ],
    name: 'TransferBatch',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_operator',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: '_from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: '_to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_id',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_value',
        type: 'uint256',
      },
    ],
    name: 'TransferSingle',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'string',
        name: '_value',
        type: 'string',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: '_id',
        type: 'uint256',
      },
    ],
    name: 'URI',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: '_approvals',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: '_balances',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: 'balance',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'owners',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: 'ids',
        type: 'uint256[]',
      },
    ],
    name: 'balanceOfBatch',
    outputs: [
      {
        internalType: 'uint256[]',
        name: 'balances',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'isApprovedForAll',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256[]',
        name: 'ids',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[]',
        name: 'amounts',
        type: 'uint256[]',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'safeBatchTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'setApprovalForAll',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
    ],
    name: 'uri',
    outputs: [
      {
        internalType: 'string',
        name: 'tokenUri',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b506111fb806100206000396000f3fe608060405234801561001057600080fd5b50600436106100bd5760003560e01c80634e1273f411610076578063a22cb4651161005b578063a22cb465146101b6578063e985e9c5146101c9578063f242432a1461020557600080fd5b80634e1273f41461016e5780636be8d6b51461018e57600080fd5b80630e89341c116100a75780630e89341c1461010b5780632eb2c2d61461012b578063319d53e71461014057600080fd5b8062fdd58e146100c257806301ffc9a7146100e8575b600080fd5b6100d56100d0366004610e62565b610218565b6040519081526020015b60405180910390f35b6100fb6100f6366004610ef4565b61029b565b60405190151581526020016100df565b61011e610119366004610f2c565b610338565b6040516100df91906110d9565b61013e610139366004610cfb565b61042b565b005b6100fb61014e366004610cc9565b600160209081526000928352604080842090915290825290205460ff1681565b61018161017c366004610e8b565b61078f565b6040516100df9190611095565b6100d561019c366004610e62565b600060208181529281526040808220909352908152205481565b61013e6101c4366004610e28565b610930565b6100fb6101d7366004610cc9565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b61013e610213366004610db2565b61099c565b60006001600160a01b0383166102755760405162461bcd60e51b815260206004820152601860248201527f455243313135353a20496e76616c69642061646472657373000000000000000060448201526064015b60405180910390fd5b506001600160a01b03909116600090815260208181526040808320938352929052205490565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b0319831614806102fe57507fd9b67a26000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b8061033257507f0e89341c000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b60008181526002602052604090208054606091906103559061115b565b80601f01602080910402602001604051908101604052809291908181526020018280546103819061115b565b80156103ce5780601f106103a3576101008083540402835291602001916103ce565b820191906000526020600020905b8154815290600101906020018083116103b157829003601f168201915b5050505050905060008151116104265760405162461bcd60e51b815260206004820152601660248201527f455243313135353a20557269206e6f7420666f756e6400000000000000000000604482015260640161026c565b919050565b8483146104a05760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2049647320616e6420616d6f756e7473206c656e6774682060448201527f6d6973746d617463680000000000000000000000000000000000000000000000606482015260840161026c565b6001600160a01b0388163314806104da57506001600160a01b038816600090815260016020908152604080832033845290915290205460ff165b6105305760405162461bcd60e51b815260206004820152602160248201527f455243313135353a2043616c6c6572206973206e6f7420617574686f72697a656044820152601960fa1b606482015260840161026c565b60008060005b878110156106075788888281811061055e57634e487b7160e01b600052603260045260246000fd5b90506020020135925086868281811061058757634e487b7160e01b600052603260045260246000fd5b6001600160a01b038e16600090815260208181526040808320898452825282208054939091029490940135955085939250906105c4908490611144565b90915550506001600160a01b038a16600090815260208181526040808320868452909152812080548492906105fa90849061112c565b9091555050600101610536565b50886001600160a01b03168a6001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8b8b8b8b60405161065b9493929190611063565b60405180910390a46001600160a01b0389163b1561072a576040517fbc197c8100000000000000000000000000000000000000000000000000000000808252906001600160a01b038b169063bc197c81906106c89033908f908e908e908e908e908e908e90600401610fba565b602060405180830381600087803b1580156106e257600080fd5b505af11580156106f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071a9190610f10565b6001600160e01b03191614610737565b6001600160a01b03891615155b6107835760405162461bcd60e51b815260206004820152601960248201527f455243313135353a20556e7361666520726563697069656e7400000000000000604482015260640161026c565b50505050505050505050565b60608382146108065760405162461bcd60e51b815260206004820152602c60248201527f455243313135353a204f776e65727320616e6420616d6f756e7473206c656e6760448201527f7468206d6973746d617463680000000000000000000000000000000000000000606482015260840161026c565b8367ffffffffffffffff81111561082d57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610856578160200160208202803683370190505b50905060005b848110156109275760008087878481811061088757634e487b7160e01b600052603260045260246000fd5b905060200201602081019061089c9190610ca8565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008585848181106108de57634e487b7160e01b600052603260045260246000fd5b9050602002013581526020019081526020016000205482828151811061091457634e487b7160e01b600052603260045260246000fd5b602090810291909101015260010161085c565b50949350505050565b3360008181526001602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6001600160a01b0386163314806109d657506001600160a01b038616600090815260016020908152604080832033845290915290205460ff165b610a2c5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a2043616c6c6572206973206e6f7420617574686f72697a656044820152601960fa1b606482015260840161026c565b6001600160a01b03861660009081526020818152604080832087845290915281208054859290610a5d908490611144565b90915550506001600160a01b03851660009081526020818152604080832087845290915281208054859290610a9390849061112c565b909155505060408051858152602081018590526001600160a01b03808816929089169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0385163b15610ba6576040517ff23a6e6100000000000000000000000000000000000000000000000000000000808252906001600160a01b0387169063f23a6e6190610b449033908b908a908a908a908a9060040161101e565b602060405180830381600087803b158015610b5e57600080fd5b505af1158015610b72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b969190610f10565b6001600160e01b03191614610bb3565b6001600160a01b03851615155b610bff5760405162461bcd60e51b815260206004820152601960248201527f455243313135353a20556e7361666520726563697069656e7400000000000000604482015260640161026c565b505050505050565b80356001600160a01b038116811461042657600080fd5b60008083601f840112610c2f578182fd5b50813567ffffffffffffffff811115610c46578182fd5b6020830191508360208260051b8501011115610c6157600080fd5b9250929050565b60008083601f840112610c79578182fd5b50813567ffffffffffffffff811115610c90578182fd5b602083019150836020828501011115610c6157600080fd5b600060208284031215610cb9578081fd5b610cc282610c07565b9392505050565b60008060408385031215610cdb578081fd5b610ce483610c07565b9150610cf260208401610c07565b90509250929050565b60008060008060008060008060a0898b031215610d16578384fd5b610d1f89610c07565b9750610d2d60208a01610c07565b9650604089013567ffffffffffffffff80821115610d49578586fd5b610d558c838d01610c1e565b909850965060608b0135915080821115610d6d578586fd5b610d798c838d01610c1e565b909650945060808b0135915080821115610d91578384fd5b50610d9e8b828c01610c68565b999c989b5096995094979396929594505050565b60008060008060008060a08789031215610dca578182fd5b610dd387610c07565b9550610de160208801610c07565b94506040870135935060608701359250608087013567ffffffffffffffff811115610e0a578283fd5b610e1689828a01610c68565b979a9699509497509295939492505050565b60008060408385031215610e3a578182fd5b610e4383610c07565b915060208301358015158114610e57578182fd5b809150509250929050565b60008060408385031215610e74578182fd5b610e7d83610c07565b946020939093013593505050565b60008060008060408587031215610ea0578384fd5b843567ffffffffffffffff80821115610eb7578586fd5b610ec388838901610c1e565b90965094506020870135915080821115610edb578384fd5b50610ee887828801610c1e565b95989497509550505050565b600060208284031215610f05578081fd5b8135610cc2816111ac565b600060208284031215610f21578081fd5b8151610cc2816111ac565b600060208284031215610f3d578081fd5b5035919050565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115610f75578081fd5b8260051b80836020870137939093016020019283525090919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006001600160a01b03808b168352808a1660208401525060a06040830152610fe760a08301888a610f44565b8281036060840152610ffa818789610f44565b9050828103608084015261100f818587610f91565b9b9a5050505050505050505050565b60006001600160a01b03808916835280881660208401525085604083015284606083015260a0608083015261105760a083018486610f91565b98975050505050505050565b604081526000611077604083018688610f44565b828103602084015261108a818587610f44565b979650505050505050565b6020808252825182820181905260009190848201906040850190845b818110156110cd578351835292840192918401916001016110b1565b50909695505050505050565b6000602080835283518082850152825b81811015611105578581018301518582016040015282016110e9565b818111156111165783604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561113f5761113f611196565b500190565b60008282101561115657611156611196565b500390565b600181811c9082168061116f57607f821691505b6020821081141561119057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6001600160e01b0319811681146111c257600080fd5b5056fea264697066735822122034925164269d60599bc3126481d49099e543a8e200e62c3f66f0231303aaf1d164736f6c63430008040033';

type ERC1155MetadataMultipleURIConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155MetadataMultipleURIConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155MetadataMultipleURI__factory extends ContractFactory {
  constructor(...args: ERC1155MetadataMultipleURIConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'ERC1155MetadataMultipleURI';
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1155MetadataMultipleURI> {
    return super.deploy(overrides || {}) as Promise<ERC1155MetadataMultipleURI>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC1155MetadataMultipleURI {
    return super.attach(address) as ERC1155MetadataMultipleURI;
  }
  connect(signer: Signer): ERC1155MetadataMultipleURI__factory {
    return super.connect(signer) as ERC1155MetadataMultipleURI__factory;
  }
  static readonly contractName: 'ERC1155MetadataMultipleURI';
  public readonly contractName: 'ERC1155MetadataMultipleURI';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155MetadataMultipleURIInterface {
    return new utils.Interface(_abi) as ERC1155MetadataMultipleURIInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155MetadataMultipleURI {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC1155MetadataMultipleURI;
  }
}
