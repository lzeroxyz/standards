/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  ERC1155MetadataGlobalURIMock,
  ERC1155MetadataGlobalURIMockInterface,
} from '../ERC1155MetadataGlobalURIMock';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: '_operator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bool',
        name: '_approved',
        type: 'bool',
      },
    ],
    name: 'ApprovalForAll',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_operator',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: '_from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: '_to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256[]',
        name: '_ids',
        type: 'uint256[]',
      },
      {
        indexed: false,
        internalType: 'uint256[]',
        name: '_values',
        type: 'uint256[]',
      },
    ],
    name: 'TransferBatch',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_operator',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: '_from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: '_to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_id',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_value',
        type: 'uint256',
      },
    ],
    name: 'TransferSingle',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'string',
        name: '_value',
        type: 'string',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: '_id',
        type: 'uint256',
      },
    ],
    name: 'URI',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: '_approvals',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: '_balances',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: 'balance',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'owners',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: 'ids',
        type: 'uint256[]',
      },
    ],
    name: 'balanceOfBatch',
    outputs: [
      {
        internalType: 'uint256[]',
        name: 'balances',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'burn',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'isApprovedForAll',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'mint',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256[]',
        name: 'ids',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[]',
        name: 'amounts',
        type: 'uint256[]',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'safeBatchTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'setApprovalForAll',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'uri',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b5060408051808201909152601981527f68747470733a2f2f746f6b656e2d63646e2e646f6d61696e2f000000000000006020820152620000518162000058565b5062000154565b80516200006d90600290602084019062000071565b5050565b8280546200007f9062000117565b90600052602060002090601f016020900481019282620000a35760008555620000ee565b82601f10620000be57805160ff1916838001178555620000ee565b82800160010185558215620000ee579182015b82811115620000ee578251825591602001919060010190620000d1565b50620000fc92915062000100565b5090565b5b80821115620000fc576000815560010162000101565b600181811c908216806200012c57607f821691505b602082108114156200014e57634e487b7160e01b600052602260045260246000fd5b50919050565b6113e380620001646000396000f3fe608060405234801561001057600080fd5b50600436106100d35760003560e01c806344df8e7011610081578063a22cb4651161005b578063a22cb465146101df578063e985e9c5146101f2578063f242432a1461022e57600080fd5b806344df8e70146101545780634e1273f4146101975780636be8d6b5146101b757600080fd5b80631b2ef1ca116100b25780631b2ef1ca146101415780632eb2c2d614610156578063319d53e71461016957600080fd5b8062fdd58e146100d857806301ffc9a7146100fe5780630e89341c14610121575b600080fd5b6100eb6100e6366004610fe6565b610241565b6040519081526020015b60405180910390f35b61011161010c366004611078565b6102c4565b60405190151581526020016100f5565b61013461012f3660046110b0565b610361565b6040516100f59190611301565b61015461014f3660046110c8565b6103f5565b005b610154610164366004610e7f565b61043c565b610111610177366004610e4d565b600160209081526000928352604080842090915290825290205460ff1681565b6101aa6101a536600461100f565b6107a0565b6040516100f591906112bd565b6100eb6101c5366004610fe6565b600060208181529281526040808220909352908152205481565b6101546101ed366004610fac565b610941565b610111610200366004610e4d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b61015461023c366004610f36565b6109ad565b60006001600160a01b03831661029e5760405162461bcd60e51b815260206004820152601860248201527f455243313135353a20496e76616c69642061646472657373000000000000000060448201526064015b60405180910390fd5b506001600160a01b03909116600090815260208181526040808320938352929052205490565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316148061032757507fd9b67a26000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b8061035b57507f0e89341c000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b60606002805461037090611343565b80601f016020809104026020016040519081016040528092919081815260200182805461039c90611343565b80156103e95780601f106103be576101008083540402835291602001916103e9565b820191906000526020600020905b8154815290600101906020018083116103cc57829003601f168201915b50505050509050919050565b6104383383836000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610bff92505050565b5050565b8483146104b15760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2049647320616e6420616d6f756e7473206c656e6774682060448201527f6d6973746d6174636800000000000000000000000000000000000000000000006064820152608401610295565b6001600160a01b0388163314806104eb57506001600160a01b038816600090815260016020908152604080832033845290915290205460ff165b6105415760405162461bcd60e51b815260206004820152602160248201527f455243313135353a2043616c6c6572206973206e6f7420617574686f72697a656044820152601960fa1b6064820152608401610295565b60008060005b878110156106185788888281811061056f57634e487b7160e01b600052603260045260246000fd5b90506020020135925086868281811061059857634e487b7160e01b600052603260045260246000fd5b6001600160a01b038e16600090815260208181526040808320898452825282208054939091029490940135955085939250906105d590849061132c565b90915550506001600160a01b038a166000908152602081815260408083208684529091528120805484929061060b908490611314565b9091555050600101610547565b50886001600160a01b03168a6001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8b8b8b8b60405161066c9493929190611296565b60405180910390a46001600160a01b0389163b1561073b576040517fbc197c8100000000000000000000000000000000000000000000000000000000808252906001600160a01b038b169063bc197c81906106d99033908f908e908e908e908e908e908e906004016111aa565b602060405180830381600087803b1580156106f357600080fd5b505af1158015610707573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072b9190611094565b6001600160e01b03191614610748565b6001600160a01b03891615155b6107945760405162461bcd60e51b815260206004820152601960248201527f455243313135353a20556e7361666520726563697069656e74000000000000006044820152606401610295565b50505050505050505050565b60608382146108175760405162461bcd60e51b815260206004820152602c60248201527f455243313135353a204f776e65727320616e6420616d6f756e7473206c656e6760448201527f7468206d6973746d6174636800000000000000000000000000000000000000006064820152608401610295565b8367ffffffffffffffff81111561083e57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610867578160200160208202803683370190505b50905060005b848110156109385760008087878481811061089857634e487b7160e01b600052603260045260246000fd5b90506020020160208101906108ad9190610e2c565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008585848181106108ef57634e487b7160e01b600052603260045260246000fd5b9050602002013581526020019081526020016000205482828151811061092557634e487b7160e01b600052603260045260246000fd5b602090810291909101015260010161086d565b50949350505050565b3360008181526001602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6001600160a01b0386163314806109e757506001600160a01b038616600090815260016020908152604080832033845290915290205460ff165b610a3d5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a2043616c6c6572206973206e6f7420617574686f72697a656044820152601960fa1b6064820152608401610295565b6001600160a01b03861660009081526020818152604080832087845290915281208054859290610a6e90849061132c565b90915550506001600160a01b03851660009081526020818152604080832087845290915281208054859290610aa4908490611314565b909155505060408051858152602081018590526001600160a01b03808816929089169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0385163b15610b9e5760405163f23a6e6160e01b808252906001600160a01b0387169063f23a6e6190610b3c9033908b908a908a908a908a9060040161120e565b602060405180830381600087803b158015610b5657600080fd5b505af1158015610b6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8e9190611094565b6001600160e01b03191614610bab565b6001600160a01b03851615155b610bf75760405162461bcd60e51b815260206004820152601960248201527f455243313135353a20556e7361666520726563697069656e74000000000000006044820152606401610295565b505050505050565b6001600160a01b03841660009081526020818152604080832086845290915281208054849290610c30908490611314565b909155505060408051848152602081018490526001600160a01b0386169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0384163b15610d275760405163f23a6e6160e01b808252906001600160a01b0386169063f23a6e6190610cc5903390600090899089908990600401611253565b602060405180830381600087803b158015610cdf57600080fd5b505af1158015610cf3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d179190611094565b6001600160e01b03191614610d34565b6001600160a01b03841615155b610d805760405162461bcd60e51b815260206004820152601960248201527f455243313135353a20556e7361666520726563697069656e74000000000000006044820152606401610295565b50505050565b80356001600160a01b0381168114610d9d57600080fd5b919050565b60008083601f840112610db3578182fd5b50813567ffffffffffffffff811115610dca578182fd5b6020830191508360208260051b8501011115610de557600080fd5b9250929050565b60008083601f840112610dfd578182fd5b50813567ffffffffffffffff811115610e14578182fd5b602083019150836020828501011115610de557600080fd5b600060208284031215610e3d578081fd5b610e4682610d86565b9392505050565b60008060408385031215610e5f578081fd5b610e6883610d86565b9150610e7660208401610d86565b90509250929050565b60008060008060008060008060a0898b031215610e9a578384fd5b610ea389610d86565b9750610eb160208a01610d86565b9650604089013567ffffffffffffffff80821115610ecd578586fd5b610ed98c838d01610da2565b909850965060608b0135915080821115610ef1578586fd5b610efd8c838d01610da2565b909650945060808b0135915080821115610f15578384fd5b50610f228b828c01610dec565b999c989b5096995094979396929594505050565b60008060008060008060a08789031215610f4e578182fd5b610f5787610d86565b9550610f6560208801610d86565b94506040870135935060608701359250608087013567ffffffffffffffff811115610f8e578283fd5b610f9a89828a01610dec565b979a9699509497509295939492505050565b60008060408385031215610fbe578182fd5b610fc783610d86565b915060208301358015158114610fdb578182fd5b809150509250929050565b60008060408385031215610ff8578182fd5b61100183610d86565b946020939093013593505050565b60008060008060408587031215611024578384fd5b843567ffffffffffffffff8082111561103b578586fd5b61104788838901610da2565b9096509450602087013591508082111561105f578384fd5b5061106c87828801610da2565b95989497509550505050565b600060208284031215611089578081fd5b8135610e4681611394565b6000602082840312156110a5578081fd5b8151610e4681611394565b6000602082840312156110c1578081fd5b5035919050565b600080604083850312156110da578182fd5b50508035926020909101359150565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561111a578081fd5b8260051b80836020870137939093016020019283525090919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60008151808452815b8181101561118457602081850181015186830182015201611168565b818111156111955782602083870101525b50601f01601f19169290920160200192915050565b60006001600160a01b03808b168352808a1660208401525060a060408301526111d760a08301888a6110e9565b82810360608401526111ea8187896110e9565b905082810360808401526111ff818587611136565b9b9a5050505050505050505050565b60006001600160a01b03808916835280881660208401525085604083015284606083015260a0608083015261124760a083018486611136565b98975050505050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261128b60a083018461115f565b979650505050505050565b6040815260006112aa6040830186886110e9565b828103602084015261128b8185876110e9565b6020808252825182820181905260009190848201906040850190845b818110156112f5578351835292840192918401916001016112d9565b50909695505050505050565b602081526000610e46602083018461115f565b600082198211156113275761132761137e565b500190565b60008282101561133e5761133e61137e565b500390565b600181811c9082168061135757607f821691505b6020821081141561137857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6001600160e01b0319811681146113aa57600080fd5b5056fea26469706673582212201ceaf61f7a62737c63bfb46eeb9f539e39aae8c1e1bf12b3cb18ace84618638d64736f6c63430008040033';

type ERC1155MetadataGlobalURIMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155MetadataGlobalURIMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155MetadataGlobalURIMock__factory extends ContractFactory {
  constructor(...args: ERC1155MetadataGlobalURIMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'ERC1155MetadataGlobalURIMock';
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1155MetadataGlobalURIMock> {
    return super.deploy(
      overrides || {}
    ) as Promise<ERC1155MetadataGlobalURIMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC1155MetadataGlobalURIMock {
    return super.attach(address) as ERC1155MetadataGlobalURIMock;
  }
  connect(signer: Signer): ERC1155MetadataGlobalURIMock__factory {
    return super.connect(signer) as ERC1155MetadataGlobalURIMock__factory;
  }
  static readonly contractName: 'ERC1155MetadataGlobalURIMock';
  public readonly contractName: 'ERC1155MetadataGlobalURIMock';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155MetadataGlobalURIMockInterface {
    return new utils.Interface(_abi) as ERC1155MetadataGlobalURIMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155MetadataGlobalURIMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC1155MetadataGlobalURIMock;
  }
}
